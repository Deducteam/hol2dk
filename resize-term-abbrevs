#!/bin/bash

usage() { echo "usage: `basename $0` FILE_term_abbrevs.lp INTEGER"; }
error() { echo "error: $1"; usage; exit 1; }

echo "`basename $0` $* ..."

case "$1" in
    -h|--help) if test $# -eq 1; then usage; exit 0; else error "wrong number of arguments"; fi;;
esac

if test $# -ne 2; then error "wrong number of arguments"; fi

case $1 in
    *_term_abbrevs.lp) b=${1%_term_abbrevs.lp};;
    *) error "not a filename ending with _term_abbrevs.lp";;
esac

max=$2
f=$1
if test ! -f $f; then error "$f does not exist"; fi

h=${b}_term_abbrevs_header.lp
echo "generate $h ..."
awk '/^symbol /{nextfile}{print}' $f > $h

a=${b}_term_abbrevs_without_header.lp
echo "generate $a ..."

cat $f `find . -name "${b}_term_abbrevs_part_*.lp"` > $a
sed -i -e '/^require /d' $a

echo "split $a ..."
split --verbose --numeric-suffixes=1 -a5 -l$max $a

echo "generate $f.bak ..."
cat $h $a > $f.bak
rm -f $a $f ${b}_term_abbrevs_part_*.lp

n=`ls x* | wc -l`

for p in `ls x*`
do
    k=`expr ${p#x} + 0` # remove leading zeros
    if test $k -eq 1; then s=''; else s=_part_$k; fi
    g=${b}_term_abbrevs$s.lp
    echo "generate $g ..."
    cat $h $p > $g
    rm -f $p
done
rm -f $h

echo "update $b.lp ..."
sed -i -e "/^require open hol-light.${b}_term_abbrevs_part_/d" $b.lp
k=2
while test $k -le $n
do
    l=`expr $k + 5`
    sed -i -e "${l}i require open hol-light.${b}_term_abbrevs_part_$k;" $b.lp
    k=`expr $k + 1`
done
