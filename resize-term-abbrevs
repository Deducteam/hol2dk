#!/bin/bash

usage() { echo "usage: `basename $0` FILE_term_abbrevs.lp INTEGER"; }
error() { echo "error: $1"; usage; exit 1; }

echo "`basename $0` $* ..."

case "$1" in
    -h|--help) if test $# -eq 1; then usage; exit 0; else error "wrong number of arguments"; fi;;
esac

if test $# -ne 2; then error "wrong number of arguments"; fi

case $1 in
    *_term_abbrevs.lp) b=${1%_term_abbrevs.lp};;
    *) error "not a filename ending with _term_abbrevs.lp";;
esac

if test -z "$HOL2DK_DIR"; then error '$HOL2DK_DIR is not set'; fi

if test ! -f $1; then error "$1 does not exist"; fi
max=$2

h=${b}_term_abbrevs_header.lp
echo "generate $h ..."
awk '/^symbol /{nextfile}{print}' $1 > $h

a=${b}_term_abbrevs_without_header.lp
echo "generate $a ..."
cat $1 `find . -name "${b}_term_abbrevs_part_*.lp"` > $a
sed -i -e '/^require /d' $a

ls x[0-9]* 2> /dev/null
if test $? -eq 0; then error "there already exist x[0-9]* files"; fi
echo "split $a ..."
split --numeric-suffixes=1 -a5 -l$max $a

echo "generate $1.bak ..."
cat $h $a > $1.bak
rm -f $a $1 ${b}_term_abbrevs_part_*.lp

n=`ls x[0-9]* | wc -l`

for p in `ls x[0-9]*`
do
    k=`expr ${p#x} + 0` # remove leading zeros
    if test $k -eq 1; then s=''; else s=_part_$k; fi
    g=${b}_term_abbrevs$s.lp
    echo "generate $g ..."
    cat $h $p > $g
    echo "generate ${g}o.mk ..."
    $HOL2DK_DIR/dep-lpo $g > ${g}o.mk
    rm -f $p
done
rm -f $h

for f in $b.lp `find . -name "${b}_part_*.lp"`
do
    echo "update $f ..."
    sed -i -e "/^require open hol-light.${b}_term_abbrevs_part_/d" $f
    k=2
    while test $k -le $n
    do
        l=`expr $k + 5`
        sed -i -e "${l}i require open hol-light.${b}_term_abbrevs_part_$k;" $f
        k=`expr $k + 1`
    done
    echo "update ${f}o.mk ..."
    $HOL2DK_DIR/dep-lpo $f > ${f}o.mk
done
